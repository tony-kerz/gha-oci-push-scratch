name: flow
on:
  workflow_dispatch:
  push:
    branches: main

env:
  # note: can only store static values here
  #
  sock: /var/run/docker.sock
  cfg: configr.yaml
  image: tonykerz/containr-oci-push-scratch:1.1.1
  # docker run -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp -u $(npm run -s user) -v $(npm run -s cfg):$(npm run -s cfg) -v $(pwd):$(pwd) -e CONFIGR_YAML=$(npm run -s cfg) -e DEBUG=dbg:* -e HOME=${HOME} -w $(pwd) $(npm run -s tag)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      #
      # in this case, the image to be run will be wanting to push an oci image to a registry
      # assuming anonymous push will not be supported, so creds required for this
      #
      # note: in this case, image to b run is in a public registry, so no creds required for pull,
      # but if image to b run is in private registry, then creds would b needed for the pull and they
      # may or may not be the same creds required for the push
      #
      # these commands are good candidates to place in a reusable workflow to facilitate the pattern
      #

      # login to setup creds for push, this will place creds in ~/.docker/config.json
      # so will need to share via volume to running container...
      #
      - run: echo ${{ secrets.REGISTRY_PASS }} | docker login -u ${{ vars.REGISTRY_USER }} --password-stdin

      # run container with oci push logic
      #
      - run: |
          _cfg=$(pwd)/${cfg}
          docker run --rm \
            -u $(id -u) -e HOME=${HOME}\
            -v $(pwd):$(pwd) -w $(pwd) \
            -v ${_cfg}:${_cfg} -e CONFIGR_YAML=${_cfg} \
            -v ${sock}:${sock} \
            -e DEBUG=dbg:*
            ${image}

      # docker logout to clean up creds for safe measure
      #
      - run: docker logout
